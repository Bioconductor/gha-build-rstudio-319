+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''CardinalIO'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://cloud.r-project.org
Bioconductor version 3.19 (BiocManager 1.30.22), R Under development (unstable)
  (2024-01-31 r85845)
Installing package(s) 'CardinalIO'
also installing the dependency ‘ontologyIndex’

trying URL 'https://cloud.r-project.org/src/contrib/ontologyIndex_2.11.tar.gz'
Content type 'application/x-gzip' length 1540904 bytes (1.5 MB)
==================================================
downloaded 1.5 MB

trying URL 'https://bioconductor.org/packages/3.19/bioc/src/contrib/CardinalIO_1.1.0.tar.gz'
Content type 'application/x-gzip' length 984081 bytes (961 KB)
==================================================
downloaded 961 KB

* installing *source* package ‘ontologyIndex’ ...
** package ‘ontologyIndex’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ontologyIndex’ as ‘ontologyIndex_2.11_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ontologyIndex)
* installing *source* package ‘CardinalIO’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c CardinalIO.cpp -o CardinalIO.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c init.cpp -o init.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c pugixml.cpp -o pugixml.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o CardinalIO.so CardinalIO.o init.o pugixml.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-CardinalIO/00new/CardinalIO/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘CardinalIO’ as ‘CardinalIO_1.1.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (CardinalIO)

The downloaded source packages are in
	‘/tmp/RtmplNtpfq/downloaded_packages’

real	0m16.902s
user	0m13.202s
sys	0m2.492s
